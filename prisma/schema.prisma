// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String         @id @default(cuid())
  username      String         @unique
  passwordHash  String
  birthdayMonth DateTime?
  role          Role           @default(USER)
  emails        EmailAddress[]
  sessions      Session[]
  projects      Project[]
  createdAt     DateTime       @default(now())
}

model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmailAddress {
  id                 String    @id @default(cuid())
  address            String
  userId             String
  user               User      @relation(fields: [userId], references: [id])
  verified           Boolean   @default(false)
  verifiedAt         DateTime?
  verificationToken  String?   @unique
  verificationSentAt DateTime?
}

model Project {
  id               String   @id
  title            String
  scratchProjectId String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  files            File[]
  description      String   @default("")
  ownerId          String?
  owner            User?    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  shared           Boolean  @default(false)
}

model File {
  id        String  @id @default(cuid())
  path      String
  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  // A file can either have content or an asset (but not both)
  // If it has neither, it's a directory. Directories do not need to be explicitly created
  // unless they are empty.
  content String?
  asset   String?
  size    Int     @default(0) // in bytes

  @@unique([path, projectId])
}
